#
# SPDX-License-Identifier: Apache-2.0
#

# Default values for fm-rest-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

labels:
  fm_api:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  job:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled

images:
  tags:
    fm_rest_api: docker.io/starlingx/stx-fm-rest-api:stx.8.0-v1.0.0
    ks_user: docker.io/starlingx/stx-heat:master-centos-stable-latest
    ks_service: docker.io/starlingx/stx-heat:master-centos-stable-latest
    ks_endpoints: docker.io/starlingx/stx-heat:master-centos-stable-latest
    fm_db_sync: docker.io/starlingx/stx-fm-rest-api:stx.8.0-v1.0.0
    db_init: docker.io/starlingx/stx-heat:master-centos-stable-latest
    db_drop: docker.io/starlingx/stx-heat:master-centos-stable-latest
    dep_check: quay.io/stackanetes/kubernetes-entrypoint:v0.3.1
  pullPolicy: IfNotPresent
  local_registry:
    active: false

nameOverride: ""
fullnameOverride: ""

network:
  faultmanagement:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
    port: 18003
    node_port:
      enabled: false
      port: 30083
    external_policy_local: false

ingress:
  enabled: false
  annotations: {}
  paths: []
  hosts:
    - fm-rest-api
  tls: []

conf:
  paste:
    app:api_v1:
      paste.app_factory: fm.api.app:app_factory
    filter:authtoken:
      acl_public_routes: /, /v1
      paste.filter_factory: fm.api.middleware.auth_token:AuthTokenMiddleware.factory
    filter:request_id:
      paste.filter_factory: oslo_middleware:RequestId.factory
    pipeline:fm-api:
      pipeline: request_id authtoken api_v1

  fm:
    DEFAULT:
      log_config_append: /etc/fm/logging.conf
      region_name: RegionOne
      event_log_max_size: 4000
    database:
      idle_timeout: 60
      max_pool_size: 1
      max_overflow: 20
    oslo_middleware:
      enable_proxy_headers_parsing: True
    keystone_authtoken:
      auth_type: password
      auth_version: v3
    sysinv:
      catalog_info: platform:sysinv:internalURL
      os_region_name: RegionOne
    api:
      api_paste_config: /etc/fm/api-paste.ini
      api_workers: 2
      bind_port: 18003
  logging:
    loggers:
      keys:
        - root
        - fm
    handlers:
      keys:
        - stdout
        - stderr
        - "null"
    formatters:
      keys:
        - context
        - default
    logger_root:
      level: WARNING
      handlers: 'null'
    logger_fm:
      level: INFO
      handlers:
        - stdout
      qualname: fm
    logger_eventletwsgi:
      level: WARNING
      handlers: stderr
      qualname: eventlet.wsgi.server
    logger_sqlalchemy:
      level: WARNING
      handlers: stderr
      qualname: sqlalchemy
    handler_null:
      class: logging.NullHandler
      formatter: default
      args: ()
    handler_stdout:
      class: StreamHandler
      args: (sys.stdout,)
      formatter: context
    handler_stderr:
      class: StreamHandler
      args: (sys.stderr,)
      formatter: context
    formatter_context:
      class: oslo_log.formatters.ContextFormatter
    formatter_default:
      format: "%(message)s"
dependencies:
  static:
    fmapi:
      jobs:
        - fm-ks-user
        - fm-ks-service
        - fm-ks-endpoints
        - fm-db-sync
      services:
        - endpoint: internal
          service: identity
        - endpoint: internal
          service: oslo_db
    ks_endpoints:
      jobs:
        - fm-ks-user
        - fm-ks-service
      services:
        - endpoint: internal
          service: identity
    db_drop:
      services:
        - endpoint: internal
          service: oslo_db
    db_init:
      services:
        - endpoint: internal
          service: oslo_db
    db_sync:
      jobs:
        - fm-db-init
      services:
        - endpoint: internal
          service: oslo_db
    ks_service:
      services:
        - endpoint: internal
          service: identity
    ks_user:
      services:
        - endpoint: internal
          service: identity

manifests:
  certificates: false
  configmap_bin: true
  configmap_etc: true
  deployment_fm_rest_api: true
  ingress: true
  job_ks_endpoints: true
  job_db_init: true
  job_db_sync: true
  job_db_drop: false
  job_ks_user: true
  job_ks_service: true
  secret_db: true
  secret_ingress_tls: false
  secret_keystone: true
  service_fm: true
  service_ingress: true
endpoints:
  cluster_domain_suffix: cluster.local
  oslo_db:
    auth:
      admin:
        username: root
        password: password
        secret:
          tls:
            internal: mariadb-tls-direct
      fm:
        username: fm
        password: password
    hosts:
      default: mariadb
    host_fqdn_override:
      default: null
    path: /fm
    scheme: mysql+pymysql
    port:
      mysql:
        default: 3306
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    host_fqdn_override:
      default: null
    port:
      registry:
        node: 5000
  identity:
    name: keystone
    auth:
      admin:
        region_name: RegionOne
        username: admin
        password: password
        project_name: admin
        user_domain_name: default
        project_domain_name: default
      fm:
        role: admin
        region_name: RegionOne
        username: fm
        password: password
        project_name: service
        user_domain_name: service
        project_domain_name: service
    hosts:
      default: keystone-api
      public: keystone
    host_fqdn_override:
      default: null
    path:
      default: /v3
    scheme:
      default: http
    port:
      api:
        default: 80
        internal: 5000
  faultmanagement:
    name: fm
    hosts:
      default: fm-rest-api
      public: fm
    host_fqdn_override:
      default: null
    path:
      default: null
    scheme:
      default: 'http'
    port:
      api:
        default: 18003
        public: 80
pod:
  probes:
    fm_rest_api:
      default:
        liveness:
          enabled: True
          params:
            initialDelaySeconds: 120
            periodSeconds: 90
            timeoutSeconds: 70
  user:
    fm_rest_api:
      uid: 42424
  affinity:
    anti:
      type:
        default: preferredDuringSchedulingIgnoredDuringExecution
      topologyKey:
        default: kubernetes.io/hostname
  tolerations:
    fm:
      enabled: false
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
  mounts:
    fm_rest_api:
      init_container: null
      fm_rest_api:
  replicas:
    api: 2
  lifecycle:
    upgrades:
      deployments:
        revision_history: 3
        pod_replacement_strategy: RollingUpdate
        rolling_update:
          max_unavailable: 1
          max_surge: 3
      daemonsets:
        pod_replacement_strategy: RollingUpdate
        compute:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
    disruption_budget:
        fm:
        min_available: 0
    termination_grace_period:
        fm:
        timeout: 30
  resources:
    enabled: false
    fm:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    jobs:
      ks_endpoints:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_init:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_sync:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_drop:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"

secrets:
  identity:
    admin: fm-keystone-admin
    fm: fm-keystone-user
  oslo_db:
    admin: fm-db-admin
    fm: fm-db-user
  tls:
    faultmanagement:
      fm_api:
        public: fm-rest-api-tls-public
        internal: fm-rest-api-tls-internal


resources: {}

nodeSelector: {}

tolerations: []

affinity: {}
